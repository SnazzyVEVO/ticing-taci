<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Ticcy Tacci Toei</title>
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
  <style>
    body {
      background-color: #000000;
      color: #FF4444;
      font-family: 'Press Start 2P', monospace;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
      text-align: center;
      user-select: none;
    }

    h1 {
      font-size: 20px;
      margin-bottom: 20px;
      text-shadow: 0 0 8px red;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      margin-bottom: 20px;
    }

    .cell {
      background-color: #000;
      border: 2px solid #FF4444;
      color: #FF4444;
      font-size: 28px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .cell:hover {
      background-color: #220000;
    }

    .message {
      font-size: 12px;
      margin-top: 20px;
      height: 50px;
    }

    .hidden {
      display: none;
    }

    .disabled {
      pointer-events: none;
      opacity: 0.1;
    }
  </style>
</head>
<body>
  <h1>Ticcy Tacci Toei</h1>
  <div class="board" id="board"></div>
  <div class="message" id="message"></div>

  <!-- Placeholder for creepy audio -->
  <audio id="creepySound" src="your-sound.mp3"></audio>

  <script>
    const boardElement = document.getElementById('board');
    const messageElement = document.getElementById('message');
    const audioElement = document.getElementById('creepySound');

    let board = ["", "", "", "", "", "", "", "", ""];
    let currentPlayer = "X";
    let gameActive = true;
    let lossCount = 0;

    function createBoard() {
      boardElement.innerHTML = '';
      for (let i = 0; i < 9; i++) {
        const cell = document.createElement('div');
        cell.classList.add('cell');
        cell.dataset.index = i;
        cell.addEventListener('click', handleClick);
        cell.textContent = board[i];
        boardElement.appendChild(cell);
      }
    }

    function handleClick(e) {
      const index = e.target.dataset.index;

      if (!gameActive || board[index] !== "") return;

      board[index] = "X";
      updateBoard();

      if (checkWin("X")) {
        messageElement.textContent = "You Win... this time.";
        gameActive = false;
        return;
      }

      if (board.every(cell => cell !== "")) {
        messageElement.textContent = "Draw... You got lucky.";
        gameActive = false;
        return;
      }

      setTimeout(() => {
        computerMove();
        updateBoard();

        if (checkWin("O")) {
          lossCount++;
          messageElement.textContent = "Your Failure was inevitable and planned. Your loss only brings you closer to me.";
          if (lossCount >= 5) {
            disableGame();
          }
          // Play sound if available
          if(audioElement.src){
            audioElement.play();
          }
          gameActive = false;
        } else if (board.every(cell => cell !== "")) {
          messageElement.textContent = "Draw... You delay the inevitable.";
          gameActive = false;
        }
      }, 500);
    }

    // AI: Almost unbeatable with 15% randomness
    function computerMove() {
      if (Math.random() < 0.15) {
        let emptyIndices = board
          .map((val, idx) => (val === "" ? idx : null))
          .filter((val) => val !== null);
        const choice = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];
        board[choice] = "O";
      } else {
        let bestScore = -Infinity;
        let move = -1;
        for (let i = 0; i < 9; i++) {
          if (board[i] === "") {
            board[i] = "O";
            let score = minimax(board, 0, false);
            board[i] = "";
            if (score > bestScore) {
              bestScore = score;
              move = i;
            }
          }
        }
        board[move] = "O";
      }
    }

    function minimax(newBoard, depth, isMaximizing) {
      if (checkWin("O")) return 10 - depth;
      if (checkWin("X")) return depth - 10;
      if (newBoard.every(cell => cell !== "")) return 0;

      if (isMaximizing) {
        let bestScore = -Infinity;
        for (let i = 0; i < 9; i++) {
          if (newBoard[i] === "") {
            newBoard[i] = "O";
            let score = minimax(newBoard, depth + 1, false);
            newBoard[i] = "";
            bestScore = Math.max(score, bestScore);
          }
        }
        return bestScore;
      } else {
        let bestScore = Infinity;
        for (let i = 0; i < 9; i++) {
          if (newBoard[i] === "") {
            newBoard[i] = "X";
            let score = minimax(newBoard, depth + 1, true);
            newBoard[i] = "";
            bestScore = Math.min(score, bestScore);
          }
        }
        return bestScore;
      }
    }

    function checkWin(player) {
      const winPatterns = [
        [0,1,2],[3,4,5],[6,7,8],
        [0,3,6],[1,4,7],[2,5,8],
        [0,4,8],[2,4,6]
      ];
      return winPatterns.some(pattern =>
        pattern.every(index => board[index] === player)
      );
    }

    function updateBoard() {
      const cells = boardElement.querySelectorAll('.cell');
      cells.forEach((cell, index) => {
        cell.textContent = board[index];
      });
    }

    function disableGame() {
      boardElement.classList.add('disabled');
      messageElement.textContent = "The game is over. You were never meant to win.";
    }

    createBoard();
  </script>
</body>
</html>
